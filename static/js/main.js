/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∫–æ–º–∞–Ω–¥—ã
 */
function interruptCommand() {
	if (!commandExecutionInProgress) return

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
	if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–º–∞–Ω–¥—ã?')) {
		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ
		fetch('/api/interrupt', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
			},
		})
			.then((response) => response.json())
			.then((data) => {
				console.log('–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è:', data)

				// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
				if (window.commandFormModule && window.commandFormModule.addMessage) {
					window.commandFormModule.addMessage('–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', 'system')
				}

				// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
				updateProgressBar(100)

				// –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
				setTimeout(hideCommandControls, 1500)
			})
			.catch((error) => {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã:', error)
				if (window.commandFormModule && window.commandFormModule.addMessage) {
					window.commandFormModule.addMessage(
						`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: ${error.message}`,
						'error'
					)
				}
			})
	}
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 */
function initUI() {
	// –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç–≤–µ—Ç–∞ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
	const responseContainer = document.getElementById('response-container')
	if (responseContainer) {
		responseContainer.style.display = 'none'
	}

	// –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	const userInput = document.getElementById('user-input')
	if (userInput) {
		userInput.focus()
	}
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
 */
function initEventHandlers() {
	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
	const interruptButton = document.getElementById('interrupt-command')
	if (interruptButton) {
		interruptButton.addEventListener('click', interruptCommand)
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ñ–æ—Ä–º—ã –∫–æ–º–∞–Ω–¥
	if (window.commandFormModule && window.commandFormModule.initCommandFormHandlers) {
		window.commandFormModule.initCommandFormHandlers()
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
	if (window.historyModule && window.historyModule.initHistoryHandlers) {
		window.historyModule.initHistoryHandlers()
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
	if (window.aiModelsModule && window.aiModelsModule.initAIModelsHandlers) {
		window.aiModelsModule.initAIModelsHandlers()
	}
}

/**
 * –§—É–Ω–∫—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ–º–∞—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
document.addEventListener('DOMContentLoaded', function () {
	console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...')

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
	initUI()

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
	initEventHandlers()

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	if (window.historyModule && window.historyModule.updateCommandHistory) {
		window.historyModule.updateCommandHistory()
	}

	// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
	if (window.aiModelsModule && window.aiModelsModule.updateAIModelsStatus) {
		window.aiModelsModule.updateAIModelsStatus()
	}

	console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ')
})

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function showCommandControls(show = true) {
	const commandControls = document.querySelector('.command-controls')
	if (commandControls) {
		commandControls.style.display = show ? 'flex' : 'none'
	} else {
		console.warn('–≠–ª–µ–º–µ–Ω—Ç .command-controls –Ω–µ –Ω–∞–π–¥–µ–Ω')
	}
}

function hideCommandControls() {
	showCommandControls(false)
}

function updateProgressBar(percentage) {
	const progressBar = document.querySelector('.progress-bar-fill')
	if (progressBar) {
		progressBar.style.width = `${percentage}%`
	} else {
		console.warn('–≠–ª–µ–º–µ–Ω—Ç .progress-bar-fill –Ω–µ –Ω–∞–π–¥–µ–Ω')
	}
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.mainModule = {
	showCommandControls,
	hideCommandControls,
	updateProgressBar,
	interruptCommand,
}

// AI —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
document.addEventListener('DOMContentLoaded', function() {
	const testAiBtn = document.getElementById('testAiBtn')
	const aiModal = document.getElementById('aiTestModal')
	const aiForm = document.getElementById('aiTestForm')
	const closeBtn = aiModal?.querySelector('.close')

	// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
	if (testAiBtn && aiModal) {
		testAiBtn.addEventListener('click', function() {
			aiModal.style.display = 'block'
		})
	}

	// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
	if (closeBtn && aiModal) {
		closeBtn.addEventListener('click', function() {
			aiModal.style.display = 'none'
		})
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã AI
	if (aiForm) {
		aiForm.addEventListener('submit', async function(e) {
			e.preventDefault()

			const prompt = document.getElementById('aiPrompt').value.trim()
			const responseDiv = document.getElementById('aiResponse')
			const responseText = document.getElementById('aiResponseText')

			if (!prompt) {
				alert('–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å!')
				return
			}

			try {
				// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
				responseText.innerHTML = 'ü§ñ –î—É–º–∞—é...'
				responseDiv.style.display = 'block'

				console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', prompt); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

				const response = await fetch('/api/ai/test', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({ prompt: prompt })
				})

				console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

				if (!response.ok) {
					throw new Error(`HTTP ${response.status}: ${response.statusText}`)
				}

				const data = await response.json()
				console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', data); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

				if (data.success) {
					responseText.innerHTML = `
						<div class="ai-response success">
							<div><strong>ü§ñ –ú–æ–¥–µ–ª—å:</strong> ${data.model || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</div>
							<div><strong>üí≠ –ó–∞–ø—Ä–æ—Å:</strong> ${data.prompt}</div>
							<div><strong>‚ú® –û—Ç–≤–µ—Ç:</strong> ${data.response}</div>
						</div>
					`
				} else {
					responseText.innerHTML = `
						<div class="ai-response error">
							‚ùå <strong>–û—à–∏–±–∫–∞:</strong> ${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}
						</div>
					`
				}

			} catch (error) {
				console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
				responseText.innerHTML = `
					<div class="ai-response error">
						‚ùå <strong>–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:</strong> ${error.message}
					</div>
				`
			}
		})
	}
})
