[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neuro-link-assistant"
version = "0.1.0"
description = "Интеллектуальный ассистент для работы с нейросетями"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Разработчик", email = "developer@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
]

dependencies = [
    "flask>=2.2.3",
    "werkzeug>=2.2.3",
    "selenium>=4.1.0",
    "requests>=2.26.0",
    "beautifulsoup4>=4.10.0",
    "numpy>=1.21.0",
    "opencv-python>=4.5.3",
    "pillow>=8.3.2",
    "pyautogui>=0.9.53",
    "pynput>=1.7.6",
    "pygetwindow>=0.0.9",
    "psutil>=5.8.0",
    'pywin32>=301; sys_platform == "win32"',
    'WMI>=1.5.1; sys_platform == "win32"',
    "python-dotenv>=0.19.0",
    "colorlog>=6.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.2.0",
    "pre-commit>=3.0.0",
    "black>=23.3.0",
    "pylint>=2.17.2",
    "isort>=5.12.0",
    "autoflake>=2.1.1",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
]

docs = [
    "sphinx>=6.1.3",
    "sphinx-rtd-theme>=1.2.0",
]

ml = [
    "tensorflow>=2.12.0; platform_system != 'Windows' or platform_machine != 'ARM64'",
    "torch>=2.0.0",
    "transformers>=4.28.1",
]

[project.scripts]
neuro-assistant = "core.cli:main"

[tool.setuptools]
packages = ["core", "utils", "routes"]
package-dir = {"" = "."}

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov=core --cov=utils --cov=routes --cov-report=term-missing"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pylint.messages_control]
disable = [
    "C0111", # missing-docstring
    "C0103", # invalid-name
    "C0303", # trailing-whitespace
    "W0614", # unused-wildcard-import
    "W0401", # wildcard-import
    "W0703", # broad-except
    "E0611", # no-name-in-module
]

[tool.pylint.format]
max-line-length = 100
